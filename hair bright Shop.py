import uuid

class Product:
    def __init__(self, name, description, price, online_shop):
        self.name = name
        self.description = description
        self.price = price
        self.online_shop = online_shop

class Customer:
    def __init__(self, name, email, address):
        self.name = name
        self.email = email
        self.address = address
        self.cart = []          
        self.past_orders = []   

class OnlineShop:
    def __init__(self, name, url):
        self.name = name
        self.url = url
        self.products = []

    def addingItemsToCart(self, customer, product, quantity):
        customer.cart.append((product, quantity))

    def checkOut(self, customer):
        if not customer.cart:
            print("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤")
            return

        total_price = sum(product.price * quantity for product, quantity in customer.cart)
        order_id = str(uuid.uuid4())
        order = {
            "order_id": order_id,
            "items": [(product.name, quantity) for product, quantity in customer.cart],
            "total": total_price
        }
        customer.past_orders.append(order)
        customer.cart.clear()
        print(f"‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {order_id}")
        return order_id

    def orderTracking(self, customer, order_id):
        for order in customer.past_orders:
            if order["order_id"] == order_id:
                print("üì¶ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:")
                print(f"‡∏£‡∏´‡∏±‡∏™: {order['order_id']}")
                for item in order["items"]:
                    print(f"- {item[0]}: {item[1]} ‡∏ä‡∏¥‡πâ‡∏ô")
                print(f"üí∞ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {order['total']} ‡∏ö‡∏≤‡∏ó")
                return
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏")

shop = OnlineShop("hair bright", "www.hairbright.com")

product_data = [
    ("Shampoo", "‡πÅ‡∏ä‡∏°‡∏û‡∏π‡∏™‡∏π‡∏ï‡∏£‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô", 199),
    ("Hair Conditioner", "‡∏Ñ‡∏£‡∏µ‡∏°‡∏ô‡∏ß‡∏î‡∏ú‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏•‡πâ‡∏≥‡∏•‡∏∂‡∏Å", 199),
    ("Hair Scissors", "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á", 159),
    ("Clippers", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏ú‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", 125),
    ("Combs and Brushes", "‡∏´‡∏ß‡∏µ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏£‡∏á‡∏ú‡∏°", 200),
    ("Products for coloring, straightening, and curling", "‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏™‡∏µ ‡∏¢‡∏∑‡∏î ‡πÅ‡∏•‡∏∞‡∏î‡∏±‡∏î‡∏ú‡∏°", 299),
    ("Hair treatment and mask", "‡∏ó‡∏£‡∏µ‡∏ï‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏°‡∏≤‡∏™‡∏Å‡πå‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏°", 209),
    ("Hair serum and oil", "‡πÄ‡∏ã‡∏£‡∏±‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏°", 189)
]

for name, desc, price in product_data:
    product = Product(name, desc, price, shop)
    shop.products.append(product)

customer = Customer("mummum", "mummum@hothot.com", "1/1 m.1 nakhonpathom")

shop.addingItemsToCart(customer, shop.products[0], 2)  # Shampoo x2
shop.addingItemsToCart(customer, shop.products[7], 1)  # Hair serum and oil x1

order_id = shop.checkOut(customer)

shop.orderTracking(customer, order_id)